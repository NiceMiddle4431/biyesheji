
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--表格开始-->
<br />
<div class="col-lg-12 col-xs-12">
    <div  class="col-lg-1 col-xs-1">
        <input id="btnSearch" type="button" class="btn btn-primary btn-space" value="查询" />
    </div>
    <div class="col-lg-11 col-xs-11">
        <input id="txtSearch" type="text" class="form-control round-form" placeholder="请输入讲座主题或举办人姓名" />
    </div>
</div>
<br />
<div class="col-lg-12 col-xs-12">
    <table id="LectureList"></table>
</div><!-- /col-lg-12 -->
<!--表格结束-->

<!--操作按钮，讲座信息的座信息的多条删除和申请开始-->
<div class="btn-group pull-right" id="toolbar">
    <button id="AddLectureBtn" type="button" class="btn btn-default" data-toggle='modal' data-target='#AddLecture'>
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>申请
    </button>
    <button id="DeleteMajorClasses" type="button" class="btn btn-default" style="">
        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
    </button>
</div>
<!--操作按钮，讲座信息的多条删除和申请结束-->

<!--申请时模态框-->
<div class="modal fade" id="AddLecture" tabindex="-1" role="dialog" aria-labelledby="AddLectureLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="AddLectureLabel">申请讲座信息</h4>
            </div>
            <div class="modal-body">
                <form id="AddForm" class="form-horizontal style-form" method="post" action="##">

                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">学号</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="AddNum" name="AddNum">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">主题</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="AddSubject" name="AddSubject">
                        </div>
                        <label class="col-sm-6 col-sm-6 control-label">最多50个字</label>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">简介</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="AddSummary" name="AddSummary">
                        </div>
                        <label class="col-sm-6 col-sm-6 control-label">最多250个字</label>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">开始时间</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="AddLectureTime" name="AddLectureTime">
                        </div>
                        <label class="col-sm-6 col-sm-6 control-label">格式为2008/01/01 08:05</label>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">报名截止</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="AddDeathLine" name="AddDeathLine">
                        </div>
                        <label class="col-sm-6 col-sm-6 control-label">格式为2008/01/01 08:05</label>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">持续时间</label>
                        <div class="col-sm-6">
                            <select class="form-control round-form"  id="AddSpan" name="AddSpan"> </select>
                        </div>
                        <label class="col-sm-6 col-sm-6 control-label">/小时</label>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">举办学院</label>
                        <div class="col-sm-6">
                            <select class="form-control round-form" id="AddArchitectureId" name="AddArchitectureId"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">举办地点</label>
                        <div class="col-sm-6">
                            <select class="form-control round-form" id="AddPlaceId" name="AddPlaceId"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">预计人数</label>
                        <div class="col-sm-6">
                            <select class="form-control round-form" id="AddExpectPeople" ,name="AddExpectPeople"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">可获学分</label>
                        <div class="col-sm-6">
                            <select class="form-control round-form"  id="AddScore" name="AddScore"></select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="AddClose">关闭</button>
                <button type="submit" class="btn btn-primary" id="AddSubmit">提交</button>
            </div>
        </div>
    </div>
</div>
<!--申请时模态框结束-->

<!--修改时模态框-->
<div class="modal fade" id="EditModal" tabindex="-1" role="dialog" aria-labelledby="EditModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="EditModalLabel">修改讲座信息</h4>
            </div>
            <div class="modal-body">
                <form id="EditForm" class="form-horizontal style-form" method="post" action="##">
                    <div class="form-group hidden">
                        <label class="col-sm-2 col-sm-2 control-label">Id</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control round-form" id="EditId" name="EditId">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 col-sm-2 control-label">讲座名</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control round-form" id="EditMajorClassName" name="EditMajorClassName">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="EditClose">关闭</button>
                <button type="submit" class="btn btn-primary" id="EditSubmit">提交</button>
            </div>
        </div>
    </div>
</div>
<!--修改时模态框结束-->


@section javascript{
    <link href="~/assets/bootstraptable/src/bootstrap-table.css" rel="stylesheet" />
    <script src="~/assets/bootstraptable/src/bootstrap-table.js"></script>

    <!--表格加载-->
   <script>
        $("#LectureList").bootstrapTable({
            url: "/Lecture/GetAllLecture",// 获取表格数据的url
            method: 'post',//请求方式
            dataType: "json",
            dataField: "rows",
            classes: 'table',//边框
            undefinedText: '',//当数据为 undefined 时显示的字符
            pagination: true,//启动分页
            striped: true,  //表格显示条纹，默认为false
            pagination: true, // 在表格底部显示分页组件，默认false
            pageList: [10, 25, 50], // 设置页面可以显示的数据条数
            pageSize: 10, // 页面数据条数
            pageNumber: 1, // 首页页码
            showColumns: true,  //显示下拉框勾选要显示的列
            showRefresh: false,  //显示刷新按钮
            showToggle: false,//显示一行是否改成竖着
            showPaginationSwitch: true,//是否显示 下面的分页框
            search: false, //显示搜索框
            detailView: true,       //详情页面显示
            //toolbar操作
            toolbar: '#toolbar',//工具按钮用哪个容器
            toolbarAligh: 'left',//工具栏对齐方式
            buttonsAligh: 'right',//按钮对齐方式

            sortOrder: "asc",//排序方式
            locale: 'zh-CN',//中文支持
            sidePagination: 'server', // 设置为服务器端分页

            queryParamsType: '',//采用自定义查询参数组织方式
            queryParams: function (params) { // 请求服务器数据时发送的参数，可以在这里添加额外的查询参数，返回false则终止请求               
                return {
                    ParamLecture: $("txtSearch").val(),
                    PageSize: params.pageSize, // 每页要显示的数据条数
                    PageNumber: params.pageNumber,//请求第几页
                }
            },

            columns: [{
                checkbox: true
            }, {
                field: 'Id',
                title: '讲座信息Id',
                visible: false,
                align: 'center',
                valign: 'middle'
            }, {
                field: 'Lecture.Subject',
                title: '讲座信息名',
                align: 'center',
                valign: 'middle'
            }, {
                field: 'User.Name',
                title: '负责人',
                align: 'center',
                valign: 'middle'
            }, {
                title: '开始时间',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    return changeDateFormat(row.Lecture.LectureTime);
                }
            }, {
                title: '报名截止时间',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    return changeDateFormat(row.Lecture.DeathLine);
                },

            }, {
                field: 'Place.PlaceName',
                title: '举办地点',
                align: 'center',
                valign: 'middle'
            }, {
                title: '操作',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    let str = "<button onclick='Edit(" + row.Id +
                        ")' data-toggle='modal' data-target='#EditModal' class='btn btn-default btn-sm'>" +
                        "<span class='glyphicon glyphicon-pencil' aria-hidden='true'>修改</span></button>";
                    return str;
                }
            }],

            //子页面（详情页）内容
            onExpandRow: function (index, row, $detail) {
                oTableInit.InitSubTable(index, row, $detail);
            }

        })
    </script>
   <script>
        var oTableInit = new Object();
        oTableInit.InitSubTable = function (index, row, $detail) {
            var cur_table = $detail.html('<table></table>').find('table');
            $(cur_table).bootstrapTable({
                url: "/Lecture/GetLecture?Id=" + row.Id,// 获取表格数据的url
                method: 'post',//请求方式
                dataType: "json",
                dataField: "data",
                datailView: true,
                pageSize: 10, // 页面数据条数
                pageNumber: 1, // 首页页码
                pageList: [10, 25],
                columns: [{
                    field: "Lecture.Summary",
                    title: '内容简介',
                    align: 'center',
                    valign: 'middle'
                }, {
                    field: "User.PhoneNum",
                    title: '联系方式',
                    align: 'center',
                    valign: 'middle'
                }],
                //无线循环取子表，直到子表里面没有记录
                onExpandRow: function (index, row, $Subdetail) {
                    oTableInit.InitSubTable(index, row, $Subdetail);
                }
            });
            return oTableInit;
        };
    </script>
    <!--表格加载结束-->

    <!--ajax提交申请讲座信息信息-->
    <script>
        //提交讲座信息信息
        $("#AddSubmit").click(function () {
            $.ajax({
                url: "/Lecture/AddSaveLecture",
                data: {
                    AddNum: '15211220001',
                    AddSubject: $("#AddSubject").val(),
                    AddSummary: $("#AddSummary").val(),
                    AddLectureTime: $("#AddLectureTime").val(),
                    AddDeathLine: $("#AddDeathLine").val(),
                    AddSpan: $("#AddSpan").val(),
                    AddExpectPeople: $("#AddExpectPeople").val(),
                    AddArchitectureId: $("#AddArchitectureId").val(),
                    AddPlaceId: $("#AddPlaceId").val(),
                    AddScore: $("#AddScore").val(),
                },
                type: "POST",
                dataType: "json",
                success: function (result) {
                    $("#AddClose").click();
                    alert(result);
                    $("#LectureList").bootstrapTable('refresh');
                }
            })
        })
    </script>
    <!--ajax提交申请讲座信息信息结束-->

    <!--向修改模态框申请待编辑讲座信息信息-->
    <script>
        //编辑讲座信息信息
        function Edit(Id) {
            $.ajax({            //获取讲座信息信息
                url: "/Lecture/GetMajorClass",
                data: { Id: Id },
                type: "POST",
                dataType: "JSON",
                success: function (majorClass) {                   //填充讲座信息信息到表单
                    $("#EditId").val(majorClass.Id);
                    $("#EditMajorClassName").val(majorClass.MajorClassName);
                }
            })
        }
    </script>
    <!--向修改模态框申请待编辑讲座信息信息结束-->

    <!--ajax提交编辑后的讲座信息信息-->
    <script>
        $("#EditSubmit").click(function () {
            $.ajax({
                url: "/Lecture/EditSaveMajorClass",
                data: {
                    EditId: $("#EditId").val(),
                    EditMajorClassName: $("#EditMajorClassName").val(), 
                },
                type: "POST",
                dataType: "json",
                success: function (result) {
                    alert(result);
                    $("#EditClose").click();
                    $("#LectureList").bootstrapTable('refresh');
                }
            })
        })
    </script>
    <!--ajax提交编辑后的讲座信息信息结束-->

    <!--ajax删除讲座信息信息并更新表格-->
    <script>
        $("#DeleteMajorClasss").click(function () {

            var ids = $.map($("#LectureList").bootstrapTable('getSelections'),
                function (row) {
                    return row.Id;
                })
            if (ids.length <= 0) {
                alert("请选择至少一条的删除记录");
            } else {
                if (confirm("确定删除？")) {
                    $.ajax({
                        url: "/Lecture/Delete",
                        type: "POST",
                        data: { Ids: ids },
                        dataType: "json",
                        success: function (result) {
                            alert(result);
                            $("#LectureList").bootstrapTable('refresh');
                        }
                    })
                }
            }
        })
    </script>
    <!--ajax删除讲座信息信息并更新表格结束-->

    <!--下拉选择加载-->
    <script>
        $("#AddLectureBtn").click(function () {
            $.ajax({               //获取学校建筑信息
                url: "/Architecture/GetAllArchitecture",
                type: "POST",
                dataType: "JSON",
                success: function (architecture) {
                    $("#AddArchitectureId").empty();
                    for (var i = 0; i < architecture.length; i++) {
                        if (i == 0) {
                            $("#AddArchitectureId").append("<option value='" + architecture[i].Id + "' selected='selected'>" + architecture[i].ArchitectureName + "</option>")
                        } else {
                            $("#AddArchitectureId").append("<option value='" + architecture[i].Id + "'>" + architecture[i].ArchitectureName + "</option>")
                        }

                    }
                    $.ajax({            //获取建筑内教室信息
                        url: "/Place/GetAllPlace",
                        data: { ArchitectureId: $('#AddArchitectureId').val() },
                        type: "POST",
                        dataType: "JSON",
                        success: function (place) {
                            $("#AddPlaceId").empty();
                            for (var i = 0; i < place.length; i++) {
                                if (i == 0) {
                                    $("#AddPlaceId").append("<option value='" + place[i].Id + "' selected='selected'>" + place[i].PlaceName + "</option>")
                                } else {
                                    $("#AddPlaceId").append("<option value='" + place[i].Id + "'>" + place[i].PlaceName + "</option>")
                                }

                            }
                        }
                    })
                }
            })
           
            GetConfig("GetRoomNum", "AddExpectPeople");         //预计人数
            GetConfig("GetSpanTime", "AddSpan");                //预计时长
            GetConfig("GetScore", "AddScore");                  //讲座学分
        })

        $("#AddArchitectureId").change(function () {
            $.ajax({            //获取建筑内教室信息
                async: false,
                url: "/Place/GetAllPlace",
                data: { ArchitectureId: $('#AddArchitectureId').val() },
                type: "POST",
                dataType: "JSON",
                success: function (place) {
                    $("#AddPlaceId").empty();
                    for (var i = 0; i < place.length; i++) {
                        if (i == 0) {
                            $("#AddPlaceId").append("<option value='" + place[i].Id + "' selected='selected'>" + place[i].PlaceName + "</option>")
                        } else {
                            $("#AddPlaceId").append("<option value='" + place[i].Id + "'>" + place[i].PlaceName + "</option>")
                        }

                    }
                }
            })
        })
    </script>


    <script>
        //日期转换
        function changeDateFormat(cellval) {
            if (cellval != null) {
                var date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();
                return date.getFullYear() + "/" + month + "/" + currentDate + " "
                + hours + ":" + minute;
            }
        }

        //获取配置值
        function GetConfig(url, Id) {
            $.ajax({
                url: "/Lecture/" + url,
                type: "POST",
                dataType: "JSON",
                success: function (result) {
                    $("#" + Id).empty();
                    for (var i = 0; i < result.length; i++) {
                        if (i == 0) {
                            $("#" + Id).append("<option value='" + result[i] + "' selected='selected'>" + result[i] + "</option>")
                        } else {
                            $("#" + Id).append("<option value='" + result[i] + "'>" + result[i] + "</option>")
                        }

                    }
                }
            })
        }
    </script>
}

